name: CI Pipeline

on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - staging

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.10]

    steps:
      # 1. Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 black pytest pytest-cov

      # 4. Run flake8 linting
      #- name: Run flake8
      #  run: flake8 .

      # 5. Run black formatting check
      - name: Run black
        run: black . --check

      # 6. Run unit tests with coverage
      - name: Run unit tests
        run: pytest --cov=cloudmailin --cov-report=xml --ignore=tests/functional

      # 7. Run functional tests
      - name: Run functional tests
        run: pytest tests/functional

      # 8. Upload coverage report
      - name: Upload coverage to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

      # 9. Enforce coverage thresholds
      - name: Check coverage thresholds
        run: |
          COVERAGE=$(python -c "import xml.etree.ElementTree as ET; print(ET.parse('coverage.xml').getroot().attrib['line-rate'])")
          if (( $(echo "$COVERAGE < 0.90" | bc -l) )); then
            echo "Test coverage ($COVERAGE) is below the required threshold (90%)"
            exit 1
          fi
