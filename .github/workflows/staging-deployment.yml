name: Deploy to Staging

on:
  push:
    branches:
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      REGION: us-central1
      DOMAIN: cm-staging.aalhub.uk
      SERVICE: cloudmailin-staging
      BASE_URL: ${{ secrets.STAGING_BASE_URL }}

    steps:
      # 1. Checkout Code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Authenticate with Google Cloud
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_KEY }}

      # 3. Set up Google Cloud CLI
      - name: Set up Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: '427.0.0'
          project_id: ${{ secrets.GCLOUD_PROJECT_ID }}

      # 4. Install gcloud beta components
      - name: Install gcloud beta components
        run: |
          gcloud components install beta --quiet

      # 5. Authenticate Docker with Google Artifact Registry
      - name: Authenticate Docker with GAR
        run: gcloud auth configure-docker $REGION-docker.pkg.dev --quiet

      # 6. Build and Push Docker Image
      - name: Build and Push Docker Image
        run: |
          DEPLOYED_AT=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          IMAGE_NAME=$REGION-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT_ID }}/cloudmailin-staging/cloudmailin-staging:${{ github.sha }}
          docker build --build-arg APP_VERSION=${{ github.sha }} --build-arg DEPLOYED_AT=$DEPLOYED_AT -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      # 7. Wait before deploying
      - name: Wait before deploying
        run: sleep 10

      # 8. Deploy to Google Cloud Run
      - name: Deploy to Google Cloud Run
        run: |
          gcloud run deploy $SERVICE \
            --image=$REGION-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT_ID }}/cloudmailin-staging/cloudmailin-staging:${{ github.sha }} \
            --region=$REGION \
            --platform=managed \
            --allow-unauthenticated \
            --quiet

      # --- Post deployment tests ---

      # A. Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.3"

      # B. Install dependencies
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-pytest

      # C. Run functional tests
      - name: Run functional tests
        run: |
          pytest tests/functional \
          --base-url=${{ env.BASE_URL }} \
          --alluredir=allure-results
