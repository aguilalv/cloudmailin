"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","6","tests.unit","test_factory","","","","test_app_uses_environment_specific_config_configured_in_configpy","
    Ensure the app uses the appropriate configuration class based on FLASK_ENV.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","6","tests.unit.handlers","test_campaign_classifier_handler","","","","test_campaign_classifier_handler_integration[subject-Random Subject-unclassified]","
    Integration test to verify that CampaignClassifierHandler processes an Email object correctly,
    assigning campaign_type based on a dynamic field while leaving other fields untouched.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","6","tests.unit","test_generic_view","","","","test_generic_view_returns_status_and_handler","
    Test that the correct response is returned, including status and handler fields.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","0","tests.unit","test_handler_registry","","","","test_handler_registry_rejects_invalid_handler[invalid_handler4]","
    Test that the handler registry rejects invalid handler classes.
    "
"passed","Tue Jan 28 16:29:58 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","31","tests.unit.handlers","test_base_handler","","","","test_base_handler_logs_health_message","
    Test that BaseHandler logs a health-related message when handling an email.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","47","tests.unit.handlers","test_campaign_classifier_handler","","","","test_campaign_classifier_handler_integration[subject-Special Sale-promotion]","
    Integration test to verify that CampaignClassifierHandler processes an Email object correctly,
    assigning campaign_type based on a dynamic field while leaving other fields untouched.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","1","tests.unit.handlers","test_steps","","","","test_assign_campaign_type_with_matching_subject","
    Test that assign_campaign_type assigns the correct campaign type
    based on a matching subject keyword.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","8","tests.unit.handlers","test_campaign_classifier_handler","","","","test_campaign_classifier_handler_integration[subject-Meeting Invitation-unclassified]","
    Integration test to verify that CampaignClassifierHandler processes an Email object correctly,
    assigning campaign_type based on a dynamic field while leaving other fields untouched.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","8","tests.unit","test_db","","","","test_store_email_logs_error_on_failure","
    Ensure store_email logs an error if Firestore raises an exception.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","0","tests.unit","test_email_schema","","","","test_preprocess_payload_raises_valueerror_when_missing_required_fields[headers.subject-Missing required fields]","
    Test preprocess_payload with missing required fields.

    Ensures that a ValueError is raised when required fields are missing.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","0","tests.unit","test_email_schema","","","","test_flatten_payload_returns_none_when_missing_fields[headers.date-date]","
    Test flatten_payload with missing keys in the nested payload.

    Ensures that missing fields return None without raising errors.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","7","tests.unit","test_db","","","","test_store_email_uses_firestore_collection_from_config","
    Ensure store_email adds data to the correct Firestore collection based on the environment.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","1","tests.unit","test_generic_view","","","","test_generic_view_invalid_input[headers.date-Invalid Date-Validation failed]","
    Parametrized test for invalid input values.

    Ensures specific fields with invalid data return a 400 error.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","0","tests.unit","test_handler_registry","","","","test_handler_registry_rejects_invalid_handler[not_a_class]","
    Test that the handler registry rejects invalid handler classes.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","5","tests.unit","test_db","","","","test_subsequent_calls_to_get_db_return_same_helper_instance","
    Ensure get_db returns the same DatabaseHelper instance for subsequent calls.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","1","tests.unit","test_email_schema","","","","test_from_flat_data_creates_valid_email_from_valid_flat_payload","
    Test from_flat_data creates a valid Email instance.

    Ensures the factory method correctly initializes an Email model.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","7","tests.unit.handlers","test_base_handler","","","","test_base_handler_logs_email_stored_in_database","
    Test that the final modified email model is passed to the storage step to be stored in the database.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","1","tests.unit","test_handler_registry","","","","test_handler_registry_register_and_retrieve","
    Test that handlers can be registered and retrieved correctly from the registry.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","2","tests.unit","test_generic_view","","","","test_generic_view_invalid_input[envelope.from-invalid-email-Validation failed]","
    Parametrized test for invalid input values.

    Ensures specific fields with invalid data return a 400 error.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","7","tests.unit","test_generic_view","","","","test_generic_view_calls_handler_handle","
    Test that the selected handler's handle method is called with the Email object.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","2","tests.unit","test_email_schema","","","","test_flatten_payload_raises_value_error_when_invalid_input","
    Test flatten_payload with an invalid (non-dictionary) input.

    Ensures that the method raises a ValueError when input is not a dictionary.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","1","tests.unit","test_logging","","","","test_logging_incoming_request","
    Test that incoming requests are logged with method and path.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","1","tests.unit","test_generic_view","","","","test_generic_view_missing_required_fields[envelope.from-Validation failed]","
    Parametrized test for missing required fields.

    Ensures that missing required fields return a 400 error.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","1","tests.unit.handlers","test_steps","","","","test_assign_campaign_type_does_not_modify_unrelated_fields","
    Test that assign_campaign_type does not modify unrelated fields.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","7","tests.unit","test_db","","","","test_store_email_adds_document","
    Ensure store_email adds the email document to the Firestore collection.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","0","tests.unit","test_handler_registry","","","","test_handler_registry_rejects_invalid_handler[123]","
    Test that the handler registry rejects invalid handler classes.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","0","tests.unit.handlers","test_campaign_classifier_handler","","","","test_campaign_classifier_handler_has_correct_steps","
    Test that CampaignClassifierHandler includes only the assign_campaign_type step.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","4","tests.unit","test_factory","","","","test_app_uses_default_config_when_no_option_provided","
    Ensure the app uses the default configuration when no test_config is provided.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","1","tests.unit","test_health","","","","test_health_check_endpoint","
    Test the health check endpoint returns the correct response.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","6","tests.unit","test_db","","","","test_missing_firestore_collection_raises_error","
    Test that DatabaseHelper raises a ValueError if FIRESTORE_COLLECTION is missing.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","6","tests.unit","test_handler_registry","","","","test_load_invalid_yaml_configs[handlers.CampaignClassifierHandler.senders-None]","
    Parametrized test for various invalid YAML configurations.

    Each test modifies a specific part of the valid configuration and expects a ValueError.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","4","tests.unit","test_handler_registry","","","","test_initialize_handler_registry_from_config","
    Test that the handler registry is initialized correctly from the YAML configuration.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","1","tests.unit.handlers","test_steps","","","","test_assign_campaign_type_with_no_match","
    Test that assign_campaign_type assigns a default campaign type
    when no conditions are met.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","6","tests.unit","test_handler_registry","","","","test_load_invalid_yaml_configs[handlers.CampaignClassifierHandler.steps-None]","
    Parametrized test for various invalid YAML configurations.

    Each test modifies a specific part of the valid configuration and expects a ValueError.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","6","tests.unit","test_factory","","","","test_app_defaults_to_production_config_if_flask_env_is_invalid","
    Ensure the app defaults to ProductionConfig when FLASK_ENV is invalid.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","0","tests.unit","test_handler_registry","","","","test_handler_registry_rejects_invalid_handler[invalid_handler3]","
    Test that the handler registry rejects invalid handler classes.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","1","tests.unit","test_email_schema","","","","test_preprocess_payload_flattens_and_parses_date_for_valid_input","
    Test preprocess_payload with valid nested payload.

    Verifies that preprocessing flattens the payload and parses the date correctly.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","4","tests.unit","test_factory","","","","test_app_uses_testing_config_when_provided","
    Ensure the app uses the provided test configuration to override defaults.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","0","tests.unit","test_email_schema","","","","test_flatten_payload_returns_none_when_missing_fields[html-html]","
    Test flatten_payload with missing keys in the nested payload.

    Ensures that missing fields return None without raising errors.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","1","tests.unit","test_logging","","","","test_json_logging_format","
    Ensure that logs are formatted as JSON with required fields.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","5","tests.unit","test_db","","","","test_first_call_to_test_db_creates_and_stores_database_helper_in_g","
    Test that the first call to get_db creates and stores the DatabaseHelper instance in Flask's g.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","7","tests.unit.handlers","test_base_handler","","","","test_base_handler_stores_final_email_model","
    Test that the final modified email model is passed to the storage step to be stored in the database.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","7","tests.unit.handlers","test_base_handler","","","","test_base_handler_executes_steps_in_order","
    Test that BaseHandler executes steps in the correct order,
    passing the modified email object through each step.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","0","tests.unit","test_email_schema","","","","test_flatten_payload_returns_none_when_missing_fields[envelope.to-recipient]","
    Test flatten_payload with missing keys in the nested payload.

    Ensures that missing fields return None without raising errors.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","5","tests.unit","test_generic_view","","","","test_access_handler_registry_in_view","
    Test that the handler registry can be accessed via app context.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","4","tests.unit","test_handler_registry","","","","test_valid_yaml_config_parses_steps","
    Test that the steps in a valid YAML configuration are correctly parsed.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","4","tests.unit","test_handler_registry","","","","test_app_initializes_with_handler_registry","
    Test that the app initializes with a handler registry in its config.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","1","tests.unit","test_email_schema","","","","test_preprocess_payload_raises_valueerror_when_missing_required_fields[envelope.from-Missing required fields]","
    Test preprocess_payload with missing required fields.

    Ensures that a ValueError is raised when required fields are missing.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","3","tests.unit","test_factory","","","","test_create_app_initializes_handler_registry_correctly","
    Test that create_app correctly initializes handler_registry with configuration.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","5","tests.unit","test_factory","","","","test_app_defaults_to_production_config_if_flask_env_is_missing","
    Ensure the app defaults to ProductionConfig when FLASK_ENV is not set.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","6","tests.unit","test_logging","","","","test_logging_initialization_message_logged","
    Test that the app logs a startup message during initialization.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","0","tests.unit","test_email_schema","","","","test_flatten_payload_returns_none_when_missing_fields[plain-plain]","
    Test flatten_payload with missing keys in the nested payload.

    Ensures that missing fields return None without raising errors.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","3","tests.unit","test_generic_view","","","","test_generic_view_valid_payload_returns_200","
    Test /generic/new with a valid payload.

    Ensures that a valid payload returns a 200 OK status
    and the correct JSON response.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","1","tests.unit","test_email_schema","","","","test_preprocess_payload_raises_valuerror_for_invalid_date","
    Test preprocess_payload with an invalid date format.

    Ensures that a ValueError is raised for an improperly formatted date.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","5","tests.unit","test_handler_registry","","","","test_valid_yaml_config_parses_senders","
    Test that the senders in a valid YAML configuration are correctly parsed.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","0","tests.unit","test_email_schema","","","","test_flatten_payload_returns_none_when_missing_fields[headers.subject-subject]","
    Test flatten_payload with missing keys in the nested payload.

    Ensures that missing fields return None without raising errors.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","0","tests.unit","test_handler_registry","","","","test_handler_registry_defaults_to_generic_handler",""
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","12","tests.unit","test_generic_view","","","","test_generic_view_selects_correct_handler","
    Test that the correct handler is selected based on the sender.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","7","tests.unit.handlers","test_campaign_classifier_handler","","","","test_campaign_classifier_handler_integration[subject-Weekly Newsletter-unclassified]","
    Integration test to verify that CampaignClassifierHandler processes an Email object correctly,
    assigning campaign_type based on a dynamic field while leaving other fields untouched.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","7","tests.unit.handlers","test_base_handler","","","","test_base_handler_stores_email_in_database","
    Test that BaseHandler stores the final email in the database.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","1","tests.unit","test_handler_registry","","","","test_handler_registry_rejects_invalid_handler[None]","
    Test that the handler registry rejects invalid handler classes.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","2","tests.unit","test_generic_view","","","","test_generic_view_missing_required_fields[headers.subject-Validation failed]","
    Parametrized test for missing required fields.

    Ensures that missing required fields return a 400 error.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","1","tests.unit","test_email_schema","","","","test_flatten_payload_transforms_nested_valid_input_into_flat","
    Test flatten_payload with a well-structured nested email payload.

    Verifies that the method correctly extracts and flattens fields from
    nested structures.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","4","tests.unit","test_handler_registry","","","","test_valid_yaml_config_has_expected_keys","
    Test that a valid YAML configuration parsing produces expected top-level keys and structure.

    Ensures that the configuration defines 'handlers' and each handler has 'steps' and 'senders'.
    "
"passed","Tue Jan 28 16:29:59 UTC 2025","Tue Jan 28 16:29:59 UTC 2025","4","tests.unit","test_handler_registry","","","","test_load_invalid_yaml_configs[root-modification0]","
    Parametrized test for various invalid YAML configurations.

    Each test modifies a specific part of the valid configuration and expects a ValueError.
    "
